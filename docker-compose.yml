version: '3.8'

services:
  ai-news:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ai_news_app
    restart: unless-stopped
    
    # 启动命令 - 启动调度器守护进程
    command: ["python", "main.py", "daemon"]
    
    # 数据卷映射 - 持久化数据
    volumes:
      - ./data:/app/data
      - ./config/config.yaml:/app/config/config.yaml:ro  # 只读配置文件
      - ./logs:/app/data/logs
    
    # 端口映射（如果需要Web界面）
    ports:
      - "8080:8080"
    
    # 环境变量（可选，如果需要覆盖配置）
    environment:
      - TZ=Asia/Shanghai
      - PYTHONUNBUFFERED=1
    
    # 健康检查 - 检查调度器状态
    healthcheck:
      test: ["CMD", "python", "main.py", "status"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s
    
    # 依赖服务（如果将来需要数据库）
    # depends_on:
    #   - redis
    #   - postgres
    
    # 网络配置
    networks:
      - ai_news_network
    
    # 资源限制 (Docker Compose v2 兼容)
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # CPU和内存限制 (适用于docker compose up)
    cpus: 1.0
    mem_limit: 1g
    memswap_limit: 1g

  # 可选：添加监控服务
  # watchtower:
  #   image: containrrr/watchtower
  #   container_name: ai_news_watchtower
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: --interval 3600 --cleanup ai_news_app
  #   networks:
  #     - ai_news_network

# 网络配置
networks:
  ai_news_network:
    driver: bridge

# 数据卷配置 (预留用于将来扩展)
volumes:
  ai_news_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data 